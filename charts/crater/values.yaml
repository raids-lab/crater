# depolyment configuration variables
createNamespace: false
imagePullSecrets: []
proxyConfig: &proxyConfig
  httpsProxy: null
  httpProxy: null
  noProxy: null

urls:
  host: "gpu.raids-lab.cn"
  grafanaHost: "gpu-grafana.raids-lab.cn"

images:
  backend:
    repository: "ghcr.io/raids-lab/crater-backend"
    tag: "sha-0566f23"
  frontend:
    repository: "ghcr.io/raids-lab/crater-frontend"
    tag: "sha-97420ef"
  storage:
    repository: "ghcr.io/raids-lab/storage-server"
    tag: "sha-7f72fd2"
  cronjob:
    repository: "crater-harbor.raids-lab.cn/crater/curl-jq"
    tag: "v0"
  grafanaProxy:
    repository: "crater-harbor.raids-lab.cn/docker.io/library/nginx"
    tag: "1.27.3-bookworm"
  buildkit:
    repository: "crater-harbor.raids-lab.cn/docker.io/moby/buildkit"
    tag: "v0.23.1"

nodeSelector:
  node-role.kubernetes.io/control-plane: ""

tolerations:
  - key: node-role.kubernetes.io/control-plane
    operator: Exists
    effect: NoSchedule

affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        preference:
          matchExpressions:
            - key: nvidia.com/gpu.present
              operator: NotIn
              values:
                - "true"

web:
  migrate:
    createMigrationJob: true
    admin:
      username: "crater-admin"
      password: "<MASKED>" # 密码已掩码
  ingress:
    host: "gpu.raids-lab.cn"
  grafana:
    address: http://prometheus-grafana.monitoring
    token: "<MASKED>" # Bearer 令牌已掩码
    ancestor: https://gpu.raids-lab.cn
    host: gpu-grafana.raids-lab.cn

# BuildKit configuration variables
buildkitConfig:
  amdConfig:
    enabled: true
    replicas: 3
    cache:
      storageClass: "openebs-hostpath"
      storageSize: 400Gi
      maxUsedSpace: "400GB"
      minFreeSpace: "50GB"
      reservedSpace: "50GB"
  armConfig:
    enabled: false # Can only be true when ARM nodes exist.
    replicas: 2
    cache:
      storageClass: "openebs-hostpath"
      storageSize: 80Gi
      maxUsedSpace: "80GB"
      minFreeSpace: "10GB"
      reservedSpace: "10GB"
  generalConfig:
    dockerconfigjson: "<MASKED>" # Docker认证配置已掩码
    buildkitProxyConfig: 
      <<: *proxyConfig
    resources:
      requests:
        cpu: 8
        memory: 24Gi
      limits:
        cpu: 16
        memory: 48Gi

# Frontend configuration variables
frontendConfig:
  version: "1.0.0"
  url:
    host: "gpu.raids-lab.cn"
    apiBase: "https://gpu.raids-lab.cn/api/"
    apiVersion: "v1"
    websiteBase: "https://raids-lab.github.io/crater/cn"
  grafana:
    overview:
      main: "https://gpu-grafana.raids-lab.cn/d/f33ade9f-821d-4e96-a7f2-eb16c8b9c447/838ffad"
      schedule: "https://gpu-grafana.raids-lab.cn/d/be9oh7yk24jy8f/crater-gpu-e8b083-e5baa6-e58f82-e88083"
      network: "https://gpu-grafana.raids-lab.cn/d/8b7a8b326d7a6f1f04y7fh66368c67af/networking"
    node:
      basic: "https://gpu-grafana.raids-lab.cn/d/k8s_views_nodes/crater-node-basic-dashboard"
      nvidia: "https://gpu-grafana.raids-lab.cn/d/nvidia-dcgm-dashboard/crater-node-nvidia-dashboard"
    job:
      basic: "https://gpu-grafana.raids-lab.cn/d/R4ZPFfyIz/crater-job-basic-dashboard"
      nvidia: "https://gpu-grafana.raids-lab.cn/d/2CDE0AC7/crater-job-nvidia-dashboard"
      pod: "https://gpu-grafana.raids-lab.cn/d/MhnFUFLSz/crater-pod-dashboard"
    user:
      nvidia: "https://gpu-grafana.raids-lab.cn/d/user-nvidia-dcgm-dashboard/crater-user-nvidia-dashboard"
  featureFlags:
    enableRegister: true

# Backend configuration variables
backendConfig:
  enableLeaderElection: false
  leaderElectionID: null
  prometheusAPI: null
  host: null
  serverAddr: null
  metricsAddr: null
  probeAddr: null
  postgres:
    host: null
    port: null
    dbname: null
    user: null
    password: null
    sslmode: null
    TimeZone: null
  auth:
    accessTokenSecret: null
    refreshTokenSecret: null
  storage:
    prefix:
      user: null
      account: null
      public: null
    rwxpvcName: null
    roxpvcName: null
  workspace:
    namespace: null
    imageNameSpace: null
  secrets:
    tlsSecretName: null
    tlsForwardSecretName: null
    imagePullSecretName: ""
  imageRegistry:
    server: null
    user: null
    password: null
    project: null
    admin: null
    adminPassword: null
  imageBuildTools:
    backendProxyConfig:
      <<: *proxyConfig
    buildxImage: ""
    nerdctlImage: null
    envdImage: null
  smtp:
    host: null
    port: null
    user: null
    password: null
    notify: null
  raidsLab:
    ldap:
      userName: null
      password: null
      address: null
      searchDN: null
    openAPI:
      url: null
      chameleonKey: null
      accessToken: null
    enable: false
    uidServerURL: null
  schedulerPlugins:
    aijob:
      enable: false
      enableProfiling: true
      profilingTimeout: 120
    spjob:
      enable: false
      predictionServiceAddress: null

# CronJob Config
cronjobConfig:
  USERNAME: "<MASKED>"
  PASSWORD: "<MASKED>" # 密码已掩码
  HOST: "gpu.raids-lab.cn"
  jobs:
    lowGPUUtil:
      schedule: "*/5 * * * *"
      TIME_RANGE: "90"
      WAIT_TIME: "30"
      UTIL: "0"
    longTime:
      schedule: "*/5 * * * *"
      BATCH_DAYS: "4"
      INTERACTIVE_DAYS: "4"
    waitingJupyter:
      schedule: "*/5 * * * *"
      JUPYTER_WAIT_MINUTES: "5"

# cert-manager configuration variables
tls:
  base:
    enabled: false
    cert: "<MASKED>" # 证书已掩码
    key: "<MASKED>" # 私钥已掩码
  forward:
    enabled: false
    cert: "<MASKED>" # 证书已掩码
    key: "<MASKED>" # 私钥已掩码

ssConfig:
  content: "<MASKED>" # 敏感配置文件内容已掩码

# pvc configuration variables
storage:
  create: false
  request: 2Ti
  storageClass: "rook-ceph-rbd"
  rwName: "crater-rw-storage"
  roName: "crater-ro-storage"
