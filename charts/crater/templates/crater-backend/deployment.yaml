# Secret for admin credentials
apiVersion: v1
kind: Secret
metadata:
  name: crater-admin-secret
  namespace: {{ .Release.Namespace }}
  labels:
    app: crater-backend
type: Opaque
data:
  username: {{ .Values.firstUser.username | b64enc }}
  password: {{ .Values.firstUser.password | b64enc }}
---
# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crater-backend
  namespace: {{ .Release.Namespace }}
  labels:
    app: crater-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crater-backend
  template:
    metadata:
      labels:
        app: crater-backend
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/crater-backend/configmap.yaml") . | sha256sum }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
        - name: migration
          image: {{ .Values.images.backend.repository }}:{{ .Values.images.backend.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: ["./migrate"]
          env:
            - name: CRATER_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: crater-admin-secret
                  key: username
            - name: CRATER_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: crater-admin-secret
                  key: password
          volumeMounts:
            - name: backend-conf
              mountPath: /etc/config/config.yaml
              subPath: config.yaml
      containers:
        - name: crater-backend-container
          image: {{ .Values.images.backend.repository }}:{{ .Values.images.backend.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command:
            - /controller
            - --config-file=/etc/config/config.yaml
          volumeMounts:
            - name: backend-conf
              mountPath: /etc/config/config.yaml
              subPath: config.yaml
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 128Mi
          ports:
            - containerPort: 8088
              name: docusaurus
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.backendConfig.port }}
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.backendConfig.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
      serviceAccountName: crater-backend
      volumes:
        - name: backend-conf
          configMap:
            name: backend-config
            items:
              - key: config.yaml
                path: config.yaml
      nodeSelector: {{ .Values.nodeSelector | toYaml | nindent 8 }}
      tolerations: {{ .Values.tolerations | toYaml | nindent 8 }}
